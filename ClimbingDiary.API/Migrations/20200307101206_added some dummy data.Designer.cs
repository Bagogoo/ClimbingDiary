// <auto-generated />
using System;
using ClimbingDiary.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClimbingDiary.API.Migrations
{
    [DbContext(typeof(ClimbingDiaryContext))]
    [Migration("20200307101206_added some dummy data")]
    partial class addedsomedummydata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClimbingDiary.API.Entities.Climber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AboutMe")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Climbers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("59b94dca-3d64-4987-be20-52f5f3f4ba19"),
                            AboutMe = "Eluwina",
                            DateOfBirth = new DateTimeOffset(new DateTime(1997, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            FirstName = "Michal",
                            SecondName = "Iksde"
                        });
                });

            modelBuilder.Entity("ClimbingDiary.API.Entities.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("SectorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SectorId");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("29b94dca-3d64-4987-be20-52f5f3f4ba19"),
                            Author = "Jakistam",
                            Description = "Very nice Keepo",
                            Grade = "VI.2",
                            Name = "Magnezjowka",
                            SectorId = new Guid("17612c45-d23a-4f71-9bef-c6fb0c0a6a0e")
                        },
                        new
                        {
                            Id = new Guid("29b84dca-3d64-4987-be20-52f5f3f4ba19"),
                            Author = "Jakistam",
                            Description = "Ładny komin",
                            Grade = "VI+",
                            Name = "Przez komin",
                            SectorId = new Guid("17612c45-d23a-4f71-9bef-c6fb0c0a6a0e")
                        },
                        new
                        {
                            Id = new Guid("39b94dca-3d64-4987-be20-52f5f3f4ba19"),
                            Author = "Jakistam",
                            Description = "Very nice Keepo",
                            Grade = "VI.1",
                            Name = "Najwazniejeszy pierwszy krok",
                            SectorId = new Guid("28612c45-d23a-4f71-9bef-c6fb0c0a6a0e")
                        });
                });

            modelBuilder.Entity("ClimbingDiary.API.Entities.Sector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Sectors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("17612c45-d23a-4f71-9bef-c6fb0c0a6a0e"),
                            Category = "Vertical",
                            Country = "Poland",
                            Description = "Rzechowice",
                            Name = "Rzedkowice"
                        },
                        new
                        {
                            Id = new Guid("28612c45-d23a-4f71-9bef-c6fb0c0a6a0e"),
                            Category = "Vertical",
                            Country = "Poland",
                            Description = "Mirow",
                            Name = "Mirow"
                        },
                        new
                        {
                            Id = new Guid("39612c45-d23a-4f71-9bef-c6fb0c0a6a0e"),
                            Category = "Vertical",
                            Country = "Slovakia",
                            Description = "Sample description",
                            Name = "Sulovskie skaly"
                        });
                });

            modelBuilder.Entity("ClimbingDiary.API.Entities.Route", b =>
                {
                    b.HasOne("ClimbingDiary.API.Entities.Sector", "Sector")
                        .WithMany("Routes")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
